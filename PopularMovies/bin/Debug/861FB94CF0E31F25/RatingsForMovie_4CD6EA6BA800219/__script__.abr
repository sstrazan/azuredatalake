<?xml version="1.0" encoding="utf-8"?>
<ScriptAndGraph GraphType="VertexCommands">
  <Vertices count="1">
    <Vertex index="1" command="-scopeVertex SV1_Extract  -i C:\Users\slaven.strazanac\AppData\Local\USQLDataRoot\u.data  -o C:\Playground\DataLake\PopularMovies\PopularMovies\bin\Debug\861FB94CF0E31F25\_Temp\RatingsForMovie_4CD6EA6BA800219\scopetmpfile._SV1_Extract_out0(WITH_HEADER)" />
    <Vertex command="-concatenate -i C:\Playground\DataLake\PopularMovies\PopularMovies\bin\Debug\861FB94CF0E31F25\_Temp\RatingsForMovie_4CD6EA6BA800219\scopetmpfile._SV1_Extract_out0 -o C:\Users\slaven.strazanac\AppData\Local\USQLDataRoot\avgRatingsForMovie119.csv" />
  </Vertices>
  <Outputs>
    <Output path="C:\Users\slaven.strazanac\AppData\Local\USQLDataRoot\avgRatingsForMovie119.csv" isBinary="False" schema="AvgRating:decimal?" />
  </Outputs>
  <graph serveForThirdParty="True" JsonErrors="True" JobType="BatchSqlIp" MaxPercentInputUnavailability="0" vertexExecutable="scopehost.exe" BroadcastCopyThroughCommandLine="ScopeEngine.dll -scopeVertex SV_CopyThrough">
    <process id="SV1_Extract" command="ScopeEngine.dll -scopeVertex SV1_Extract" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="125829121" nativeExecutionMemorySize="293601280" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="Extract_0[ALL]" streamSize="1979173">
        <cosmosStream cosmosPath="C:\Users\slaven.strazanac\AppData\Local\USQLDataRoot\u.data" streamSize="1979173" />
      </input>
      <output id="SV1_Extract_out0" cosmosStream="C:\Users\slaven.strazanac\AppData\Local\USQLDataRoot\avgRatingsForMovie119.csv" />
    </process>
  </graph>
  <Scopescript>// Auto-generated header code

// Auto-generated header code ended

// User script
DECLARE @movieRatingsFilePath = "/u.data";
DECLARE @movieDataFilePath = "/u100k.item";
DECLARE @movieId = 119;
DECLARE @ratingsForMovieOutputPath = "/avgRatingsForMovie" + @movieId + ".csv";

// extract all ratings data from file
@moviesRatings =
    EXTRACT UserId int,
            MovieId int,
            Rating int,
			Timestamp double
    FROM @movieRatingsFilePath
    USING Extractors.Tsv();

@ratingsForMovie =
    SELECT MovieId, Rating
    FROM @moviesRatings
    WHERE MovieId == @movieId;

@avgRatingForMovie =
    SELECT AVG((decimal)Rating) AS AvgRating
    FROM @ratingsForMovie;

OUTPUT @avgRatingForMovie
TO @ratingsForMovieOutputPath
//ORDER BY NumberOfRatings DESC FETCH 10 ROWS
USING Outputters.Csv();
// User script ended
// Auto-generated footer code

// Auto-generated footer code ended

</Scopescript>
  <Optimization succeeded="true" time="00:00:00.3275726" latency="-1" totalCost="-1" />
  <ScopeVertexAnnotations>
    <ScopeVertex name="SV1_Extract">
      <Operation annotation="EXTRACT USING IExtractor" />
      <Operation annotation="OUTPUT USING IOutputter" />
    </ScopeVertex>
  </ScopeVertexAnnotations>
</ScriptAndGraph>